using AbstractLL;

namespace ConcreteLL
{
    internal class Token : AbstractToken
    {
        public Token(AbstractTAG tag) : base(tag)
        { /* Nothing more todo */ }

        public static readonly Token
            ALT = new(Tag.ALT),
            AND = new(Tag.AND),
            ANSWERED = new(Tag.ANSWERED),
            AS = new(Tag.AS),
            ATTACH = new(Tag.ATTACH),
            ATTRIBUTE = new(Tag.ATTRIBUTE),
            AUTHORNOTE = new(Tag.AUTHORNOTE),
            BY = new(Tag.BY),
            CAPITALS = new(Tag.CAPITALS),
            CELL = new(Tag.CELL),
            CLOAKED = new(Tag.CLOAKED),
            COLLECT = new(Tag.COLLECT),
            COLLECTVALUES = new(Tag.COLLECTVALUES),
            COMMITTED = new(Tag.COMMITTED),
            DATATYPE = new(Tag.DATATYPE),
            DEFERRED = new(Tag.DEFERRED),
            DEFINITE = new(Tag.DEFINITE),
            DOCTITLE = new(Tag.DOCTITLE),
            DOCUMENT = new(Tag.DOCUMENT),
            ELSE = new(Tag.ELSE),
            EVERY = new(Tag.EVERY),
            EXISTS = new(Tag.EXISTS),
            EXPORT = new(Tag.EXPORT),
            EXPRESSIONTEXT = new(Tag.EXPRESSIONTEXT),
            FALSE = new(Tag.FALSE),
            FOREACH = new(Tag.FOREACH),
            FORMAT = new(Tag.FORMAT),
            FROM = new(Tag.FROM),
            HYPERLINK = new(Tag.HYPERLINK),
            IF = new(Tag.IF),
            IFKNOWNELSE = new(Tag.IFKNOWNELSE),
            INCLUDE = new(Tag.INCLUDE),
            KNOWN = new(Tag.KNOWN),
            KNOWNTRUE = new(Tag.KNOWNTRUE),
            LABEL = new(Tag.LABEL),
            LIST = new(Tag.LIST),
            LOWER = new(Tag.LOWER),
            MARK = new(Tag.MARK),
            NONMUTUALAND = new(Tag.NONMUTUALAND),
            NONMUTUALOR = new(Tag.NONMUTUALOR),
            NONREPEATED = new(Tag.NONREPEATED),
            NOT = new(Tag.NOT),
            NOTE = new(Tag.NOTE),
            NOW = new(Tag.NOW),
            OCCURRENCE = new(Tag.OCCURRENCE),
            ONLYONINPUT = new(Tag.ONLYONINPUT),
            ONLYONOUTPUT = new(Tag.ONLYONOUTPUT),
            ONLYOTHER = new(Tag.ONLYOTHER),
            OR = new(Tag.OR),
            OTHER = new(Tag.OTHER),
            OTHERSELECTIONS = new(Tag.OTHERSELECTIONS),
            PICTURE = new(Tag.PICTURE),
            PREFIX = new(Tag.PREFIX),
            PRESCRIBEDSELECTIONS = new(Tag.PRESCRIBEDSELECTIONS),
            PROPER = new(Tag.PROPER),
            PUNCTUATION = new(Tag.PUNCTUATION),
            REF = new(Tag.REF),
            REFERENCE = new(Tag.REFERENCE),
            RELEVANCE = new(Tag.RELEVANCE),
            REPEAT = new(Tag.REPEAT),
            REPEATCONTEXT = new(Tag.REPEATCONTEXT),
            REPEATCOUNTER = new(Tag.REPEATCOUNTER),
            SELECT = new(Tag.SELECT),
            SELECTIONOPTIONS = new(Tag.SELECTIONOPTIONS),
            SENSITIVE = new(Tag.SENSITIVE),
            SIMPLIFY = new(Tag.SIMPLIFY),
            SPANRELEVANCE = new(Tag.SPANRELEVANCE),
            STYLE = new(Tag.STYLE),
            SURE = new(Tag.SURE),
            TEMPLATE = new(Tag.TEMPLATE),
            TEMPLATERELEVANCE = new(Tag.TEMPLATERELEVANCE),
            TEXTFILE = new(Tag.TEXTFILE),
            THEN = new(Tag.THEN),
            TO = new(Tag.TO),
            TODAY = new(Tag.TODAY),
            TRUE = new(Tag.TRUE),
            UNREPEATED = new(Tag.UNREPEATED),
            UPPER = new(Tag.UPPER),
            USING = new(Tag.USING),
            VALUE = new(Tag.VALUE),
            WHERE = new(Tag.WHERE),
            WITH = new(Tag.WITH),
            XOR = new(Tag.XOR),
            RELOP = new(Tag.RELOP),
            ADDOP = new(Tag.ADDOP),
            MULOP = new(Tag.MULOP),
            LPAR = new(Tag.LPAR),
            RPAR = new(Tag.RPAR),
            COMMA = new(Tag.COMMA),
            FUNCTION = new(Tag.FUNCTION),

            ENDMARK = new(Tag.ENDMARK),
            UNKNOW = new(Tag.UNKNOW),
            EMPTY = new(Tag.EMPTY);
    }
}

